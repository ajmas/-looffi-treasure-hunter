var l=Object.defineProperty;var u=(e,i,t)=>i in e?l(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var a=(e,i,t)=>(u(e,typeof i!="symbol"?i+"":i,t),t);import{j as c}from"./index.c7ce50df.js";class d{constructor(){a(this,"api");a(this,"initialised",!1)}init(i){this.api=i,this.initialised=!0}async loadTreasureItem(i,t){try{if(!this.initialised||!this.api)throw new Error("Service is not properly initialised");const s=await this.api.get(`/quests/${i}/treasures/${t}.json`);if(s.data)return s.data}catch(s){console.log("error",s)}}async loadTreasureItems(i,t){if(!this.initialised||!this.api)throw new Error("Service is not properly initialised");const s=[];for(let r=0;r<t.length;r++){const n=await this.loadTreasureItem(i,t[r]);n&&s.push(n)}return s}}var o=new d;class p{constructor(){a(this,"api");a(this,"initialised",!1)}init(i){this.api=i,this.initialised=!0}async listFoundTreasureItems(i){const t=localStorage.getItem(`foundtreasure.${i}`);if(t){const s=JSON.parse(t);for(let r=0;r<s.length;r++)await o.loadTreasureItem(i,s[r].id)}return[]}}var h=new p;class f{constructor(){a(this,"api");a(this,"initialised",!1)}init(i){this.api=i,this.initialised=!0}async listQuests(){if(!this.initialised||!this.api)throw new Error("Service is not properly initialised");const i=await this.api.get("/quests");if(i.data&&i.data.entries)return i.data.entries}}var m=new f;function v(e){h.init(e),o.init(e),m.init(e)}var I=c(({app:e})=>{v(e.config.globalProperties.$api)});export{I as default};
